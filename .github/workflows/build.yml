name: togetherCI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
      - published

jobs:
  together-parent:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clonning codebase
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together
        run: mvn -B package --file modules.xml

      - name: Publish maven package to GitHub
        working-directory: .
        run: mvn deploy

  together-alive:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-alive
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-alive
        working-directory: ./together-alive
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-alive
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-alive/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-alive:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}          

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-auth-center:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-auth-center
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-auth-center
        working-directory: ./together-auth-center
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-auth-center
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-auth-center/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-auth-center:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}        

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-config:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-config
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-config
        working-directory: ./together-config
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-config
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-config/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-config:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-conversation:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-conversation
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-conversation
        working-directory: ./together-conversation
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-conversation
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-conversation/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-conversation:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-core:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-core
        working-directory: ./together-core
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-core
        run: mvn deploy

  together-database:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-database
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-database
        working-directory: ./together-database
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-database
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-database/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-database:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-discovery:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-discovery
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-discovery
        working-directory: ./together-discovery
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-discovery
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-discovery/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-discovery:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-ftp:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-ftp
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-ftp
        working-directory: ./together-ftp
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-ftp
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-ftp/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-ftp:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-gateway:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-gateway
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-gateway
        working-directory: ./together-gateway
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-gateway
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-gateway/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-gateway:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-message:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-message
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-message
        working-directory: ./together-message
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-message
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-message/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-message:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-status:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-status
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-status
        working-directory: ./together-status
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-status
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-status/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-status:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  together-user:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}

    steps:
      - name: Clone codebase
        uses: actions/checkout@v2

      - name: Get the version
        working-directory: ./together-user
        id: vars
        run: |
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo ::set-output name=tag::$(echo $(git log --oneline|head -n 1|awk '{print $1}'))

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: github
          settings-path: $GITHUB_WORKSPACE/settings.xml

      - name: Build together-user
        working-directory: ./together-user
        run: mvn -B package --file pom.xml

      - name: Publish maven package to GitHub
        working-directory: ./together-user
        run: mvn deploy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          context: .
          file: ./together-user/Dockerfile
          tags: docker.pkg.github.com/avijitmondal/together/together-user:${{steps.vars.outputs.version}}-${{steps.vars.outputs.tag}}
          github-token: ${{ github.token }}
          push: true
          secrets: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}

      - name: Published image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
